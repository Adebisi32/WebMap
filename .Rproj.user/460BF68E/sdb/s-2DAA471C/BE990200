{
    "collab_server" : "",
    "contents" : "library(sp)\nlibrary(rgdal)\nlibrary(rgeos)\nlibrary(raster)\nlibrary(devtools)\nlibrary(roxygen2)\nlibrary(gstat)\nlibrary(dismo)\nlibrary(RColorBrewer)\nlibrary(viridis)\nlibrary(mapview)\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(gridExtra) #arranging ggplots in grid\nlibrary(grid) #arranging ggplots in grid\n#======================================================\n### CLEANING SURVEY DATA ###\n## READ/CLEAN IPUMS DATA ##\nIPUMS<- read.csv(file=\"inst/extdata/idhs_00003.csv\", stringsAsFactors = FALSE)\n\n#Reassign into boolean values\n#IPUMS<-subset(IPUMS, URBAN!=1) #activate for rural only analysis\nIPUMS$ELECTRCHH[which(IPUMS$ELECTRCHH ==6 | IPUMS$ELECTRCHH ==8)]<-0\nIPUMS$COOKFUEL[which(IPUMS$COOKFUEL==400 | IPUMS$COOKFUEL==500 | IPUMS$COOKFUEL==520 |IPUMS$COOKFUEL==530) ] <-1\nIPUMS$COOKFUEL[which(IPUMS$COOKFUEL !=1 )]<-0\nIPUMS$EDUCLVL[which(IPUMS$EDUCLVL==2 | IPUMS$EDUCLVL==3 | IPUMS$EDUCLVL==8)] <-1\n\n#Create seperate tables for 3 time intervals\nC_erase<-c(\"SAMPLE\",\"URBAN\",\"CLUSTERNO\", \"ELECTRCHH\", \"COOKFUEL\", \"EDUCLVL\")\ndata2003<- IPUMS[IPUMS$SAMPLE==2884, names(IPUMS) %in% C_erase]\ndata2008<- IPUMS[IPUMS$SAMPLE==2885, names(IPUMS) %in% C_erase]\ndata2014<- IPUMS[IPUMS$SAMPLE==2886, names(IPUMS) %in% C_erase]\n\n#Aggregate to Cluster number by averaging values\nd2003<-aggregate(data2003[, 4:5], list(data2003$CLUSTERNO), mean)\nd2008<-aggregate(data2008[, 4:5], list(data2008$CLUSTERNO), mean)\nd2014<-aggregate(data2014[, 4:6], list(data2014$CLUSTERNO), mean)\nd2003$COOKFUEL<-round(d2003$COOKFUEL, 3)*100\nd2003$ELECTRCHH<-round(d2003$ELECTRCHH, 3)*100\nd2008$COOKFUEL<-round(d2008$COOKFUEL, 3)*100\nd2008$ELECTRCHH<-round(d2008$ELECTRCHH, 3)*100\nd2014$COOKFUEL<-round(d2014$COOKFUEL, 3)*100\nd2014$ELECTRCHH<-round(d2014$ELECTRCHH, 3)*100\nd2014$EDUCLVL<-round(d2014$EDUCLVL, 3)*100\n\n## READ/CLEAN DHS STATCOMPILER DATA ##\n#these variables will be used for multivariate regression for 2014 only\nDHS<- read.csv(file=\"inst/extdata/clusters2014/GHGC71FL.csv\", stringsAsFactors = FALSE)\nC_erase<-c(\"DHSCLUST\",\"All_Population_Density_2015\",\"BUILT_Population_2014\")\ndataDHS<- DHS[, names(DHS) %in% C_erase] #clean out unncessary attributes\ncolnames(dataDHS)<-c(\"DHSCLUST\", \"Pop15\", \"Built14\")\ndataDHS$Built14<-round(dataDHS$Built14, 4)\n\n## MAKING SURVEY DATA SPATIAL ##\n#Import survey cluster points\nclust03<-shapefile(\"inst/extdata/clusters2003/c2003c.shp\") #2003 Survey\nclust08<-shapefile(\"inst/extdata/clusters2008/c2008c.shp\") #2008 Survey\nclust14<-shapefile(\"inst/extdata/clusters2014/c2014c.shp\") #2014 Survey\n\n#attach survey data averages to cluster points\nclust03M <- merge(clust03, d2003, by.x = \"DHSCLUST\",\n                  by.y = \"Group.1\")\nclust08M <- merge(clust08, d2008, by.x = \"DHSCLUST\",\n                 by.y = \"Group.1\")\nclust14M <- merge(clust14, d2014, by.x = \"DHSCLUST\",\n                 by.y = \"Group.1\")\nclust14M <- merge(clust14M, dataDHS, by.x = \"DHSCLUST\",\n                  by.y =\"DHSCLUST\") #add columns for Built and Population\n\ncnames<-c(\"ELECTRCHH\",\"COOKFUEL\")\ncnames1<-c(\"ELECTRCHH\",\"COOKFUEL\",\"EDUCLVL\",\"Pop15\",\"Built14\")\nclust03M<- clust03M[,(names(clust03M) %in% cnames)]\nclust08M<- clust08M[,(names(clust08M) %in% cnames)]\nclust14M<- clust14M[,(names(clust14M) %in% cnames1)]\nclust03M <- clust03M[!is.na(clust03M@data$COOKFUEL),]\nclust08M <- clust08M[!is.na(clust08M@data$COOKFUEL),]\nclust14M <- clust14M[!is.na(clust14M@data$COOKFUEL),]\n\n#Import shapefile of Ghana districts\ndistricts<-shapefile(\"inst/extdata/DistrictBoundary/GHA_admbndp2_1m_GAUL.shp\")\n\ndistricts <- districts[,(names(districts) %in% \"HRname\")] #keep column with district names\n\n#project files to Albers Equal Area\ndist_albs<-spTransform(x=districts, CRS=\"+proj=aea +lat_1=20 +lat_2=-23 +lat_0=0\n                       +lon_0=25 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs\")\nc2003<-spTransform(x=clust03M, CRSobj=proj4string(dist_albs))\nc2008<-spTransform(x=clust08M, CRSobj=proj4string(dist_albs))\nc2014<-spTransform(x=clust14M, CRSobj=proj4string(dist_albs))\nclist<-c(c2003, c2008, c2014)\n\n#Inverse Distance Weighing Interpolation of points\nr <- raster(extent(dist_albs), res = 2000, crs = crs(dist_albs), #create blank raster\n            vals = 1)\n\ninterpolCOOK <- lapply(clist, function(x) { #interpolate cluster point values to raster surface\n  a <- gstat(id = \"COOKFUEL\", formula = COOKFUEL ~ 1, data = x)\n  b <- interpolate(object = r, model = a)\n  c <- mask(x = b, mask = dist_albs)\n})\ninterpolEnergy <- lapply(clist, function(x) { #interpolate cluster point values to raster surface\n  a <- gstat(id = \"ELECTRCHH\", formula = ELECTRCHH ~ 1, data = x)\n  b <- interpolate(object = r, model = a)\n  c <- mask(x = b, mask = dist_albs)\n})\n\n#EDUCATION interpolate cluster point values to raster surface\na <- gstat(id = \"EDUCLVL\", formula = EDUCLVL ~ 1, data = c2014)\nb <- interpolate(object = r, model = a)\nc <- mask(x = b, mask = dist_albs)\n#POPULATION interpolate cluster point values to raster surface\na1 <- gstat(id = \"Pop15\", formula = Pop15 ~ 1, data = c2014)\nb1 <- interpolate(object = r, model = a1)\nc1 <- mask(x = b1, mask = dist_albs)\n\n#BUILT AREAS interpolate cluster point values to raster surface\na2 <- gstat(id = \"Built14\", formula = Built14 ~ 1, data = c2014)\nb2 <- interpolate(object = r, model = a2)\nc2 <- mask(x = b2, mask = dist_albs)\n\n## INTERPOLATED RASTER to DISTRICTS ##\ndist_a<-dist_albs\n#Wood as Cooking Fuel\nv.vals <- extract(interpolCOOK[[1]], dist_a)\ndist_a$COOKFUEL03 <- round(sapply(v.vals, mean))\nv.vals <- extract(interpolCOOK[[2]], dist_a)\ndist_a$COOKFUEL08 <- round(sapply(v.vals, mean))\nv.vals <- extract(interpolCOOK[[3]], dist_a)\ndist_a$COOKFUEL14 <- round(sapply(v.vals, mean))\n#Energy Access\nv.vals <- extract(interpolEnergy[[1]], dist_a)\ndist_a$ELECTRCHH03 <- round(sapply(v.vals, mean))\nv.vals <- extract(interpolEnergy[[2]], dist_a)\ndist_a$ELECTRCHH08 <- round(sapply(v.vals, mean))\nv.vals <- extract(interpolEnergy[[3]], dist_a)\ndist_a$ELECTRCHH14 <- round(sapply(v.vals, mean))\n#Education\nv.vals <- extract(c, dist_a)\ndist_a$EDUCLVL14 <- round(sapply(v.vals, mean))\n\n#Population\nv.vals <- extract(c1, dist_a)\ndist_a$Pop15 <- round(sapply(v.vals, mean), 3)\n#Built Areas\nv.vals <- extract(c2, dist_a)\ndist_a$Built14 <- round(sapply(v.vals, mean), 4)\n\n#======================================================\n#### RASTER SECTION ####\n## DEFORESTATION ##\nfnm5 <- file.path(\"C:/Users/NMcCray/Documents/R/EnergyAccess/inst/extdata/HansenAllyr.tif\")\ndeforestation <- raster(fnm5)\nzamr <- raster(x = extent(districts), crs = crs(districts), res = 0.1)\nvalues(zamr) <- 1:ncell(zamr)\n\nzamr_alb <- projectRaster(from = zamr, res = 2500, crs = crs(dist_a),\n                          method = \"ngb\")\n\ndeforest_alb <- projectRaster(from = deforestation, to = zamr_alb, method = \"ngb\")\nrclmat <- matrix( #all deforestation since 2001\n  c(0, 0.9, 0, 0.99, 16, 1),\n  nrow = 2,\n  ncol = 3,\n  byrow = TRUE)\n\nrclmat1 <- matrix( #deforestation from 2001-2003\n  c(0, 0.9, 0, 0.99, 3.9, 1, 3.99, 16, 0),\n  nrow = 3,\n  ncol = 3,\n  byrow = TRUE)\n\nrclmat2 <- matrix( #deforestation from 2003-2008\n  c(0, 3.9, 0, 3.99, 8.9, 1, 8.99, 16, 0),\n  nrow = 3,\n  ncol = 3,\n  byrow = TRUE)\n\nrclmat3 <- matrix( #deforestation from 2008-2014\n  c(0, 8.9, 0, 8.99, 14.9, 1, 14.99, 16, 0),\n  nrow = 3,\n  ncol = 3,\n  byrow = TRUE)\n\ntotaldeforestclass <- reclassify(x = deforest_alb, rcl = rclmat, include.lowest = TRUE)\ndeforestclass0103 <- reclassify(x = deforest_alb, rcl = rclmat1, include.lowest = TRUE)\ndeforestclass0408 <- reclassify(x = deforest_alb, rcl = rclmat2, include.lowest = TRUE)\ndeforestclass0914 <- reclassify(x = deforest_alb, rcl = rclmat3, include.lowest = TRUE)\n\n#extract values\ndeforest.all <-extract(totaldeforestclass, dist_a)\ndeforest.0103 <- extract(deforestclass0103, dist_a)\ndeforest.0408 <- extract(deforestclass0408, dist_a)\ndeforest.0914 <- extract(deforestclass0914, dist_a)\n\n#aggregated to district\ndist_a$deforestALL<-round(100*sapply(deforest.all, mean),3)\ndist_a$deforest03<-round(100*sapply(deforest.0103, mean),3)\ndist_a$deforest08<-round(100*sapply(deforest.0408, mean),3)\ndist_a$deforest14<-round(100*sapply(deforest.0914, mean),3)\n\n\n## CROPLAND ##\nfnm6 <- file.path(\"C:/Users/NMcCray/Documents/R/EnergyAccess/inst/extdata/LandUse2009.tif\")\nCLand <- raster(fnm6)\nCLand_alb <- projectRaster(from = CLand, to = zamr_alb, method = \"ngb\") #project\n\nrcc1 <- matrix(\n  c(0, 31, 1, 39, 231, 0),\n  nrow = 2,\n  ncol = 3,\n  byrow = TRUE)\n\nCLand_RC <- reclassify(x = CLand_alb, rcl = rcc1, include.lowest = TRUE)\nCLand_RC_e <- extract(CLand_RC, dist_a)\ndist_a$crop09<-round(100*sapply(CLand_RC_e, mean),3) #aggregate crop % values to district\n#======================================================\n### VISUALATION ###\n\n#Descriptive stats\n#scatter plots\n\n#>>>Energy Access\nelecdf = data.frame(count = c(1:139), dist_a@data[,5:7])\ncolnames(elecdf)<-c(\"count\",\"energy access 2003\",\"energy access 2008\",\"energy access 2014\")\nelecdf.m = melt(elecdf, id.vars =\"count\", measure.vars = c(\"energy access 2003\",\"energy access 2008\",\"energy access 2014\"))\np1<-ggplot(elecdf.m, aes(count, value, colour = variable)) + geom_point() + ylim(0,100)+stat_smooth(method=lm)+ ggtitle(\"Energy Access\") +theme(plot.title = element_text(color=\"#666666\", face=\"bold\", size=23, hjust=0))+labs(x=\"District #\",y=\"% of Electrified Dwellings\")+theme(axis.title = element_text( color=\"#666666\", face=\"bold\", size=13))\n\n#>>>Wood Use\ncookdf = data.frame(count = c(1:139), dist_a@data[,2:4])\ncolnames(cookdf)<-c(\"count\",\"wood use 2003\",\"wood use 2008\",\"wood use 2014\")\ncookdf.m = melt(cookdf, id.vars =\"count\", measure.vars = c(\"wood use 2003\",\"wood use 2008\",\"wood use 2014\"))\np2<-ggplot(cookdf.m, aes(count, value, colour = variable)) + geom_point() + ylim(0,100)+stat_smooth(method=lm)+ ggtitle(\"Wood Use as Cooking Fuel\") +theme(plot.title = element_text(color=\"#666666\", face=\"bold\", size=23, hjust=0))+labs(x=\"District #\",y=\"% of Wood Use\")+theme(axis.title = element_text( color=\"#666666\", face=\"bold\", size=13))\n\n#>>>Deforestation\ndefdf = data.frame(count = c(1:139), dist_a@data[,12:14])\ncolnames(defdf)<-c(\"count\",\"deforestation 2003\",\"deforestation 2008\",\"deforestation 2014\")\ndefdf.m = melt(defdf, id.vars =\"count\", measure.vars = c(\"deforestation 2003\",\"deforestation 2008\",\"deforestation 2014\"))\nhead(defdf.m)\np3<-ggplot(defdf.m, aes(count, value, colour = variable)) + geom_point() + ylim(0,15)+stat_smooth(method=lm)+ ggtitle(\"Deforestation\") +theme(plot.title = element_text(color=\"#666666\", face=\"bold\", size=23, hjust=0))+labs(x=\"District #\",y=\"% of Area Deforested\")+theme(axis.title = element_text( color=\"#666666\", face=\"bold\", size=13))\n\ngrid.arrange(p1,p2,p3, nrow=3) #OUTPUT\n\n#histograms\nh1<-ggplot(data = elecdf.m, mapping = aes(x = value, fill=variable)) +\n  geom_histogram(bins = 10) + facet_wrap(~variable) #energy access\nh2<-ggplot(data = cookdf.m, mapping = aes(x = value, fill=variable)) +\n  geom_histogram(bins = 10) + facet_wrap(~variable) #Wood\nh3<-ggplot(data = defdf.m, mapping = aes(x = value, fill=variable)) +\n  geom_histogram(bins = 10) + facet_wrap(~variable) #Deforestation\n\ngrid.arrange(h1,h2,h3, nrow=3) #OUTPUT\n\n#maps\nscale<-seq(0, 100, 10) #standardize legend scale\nscaleD<-seq(0, 20, 2) #scale for deforesataion legends\ncols<-rev(get_col_regions()) #add col.regions=cols for reveresed and new colors\nMtype<-c(\"CartoDB.Positron\") #basemap\n\ne_map03<-mapview(dist_a, zcol=\"ELECTRCHH03\", col.regions=cols, layer.name=\"2003 Energy Access\", maxpoints=40000000, alpha.regions=100,legend=TRUE, at= scale, map.types=Mtype)\ne_map08<-mapview(dist_a, zcol=\"ELECTRCHH08\", col.regions=cols, layer.name=\"2008 Energy Access\", maxpoints=40000000, alpha.regions=100,legend=TRUE, at= scale, map.types=Mtype)\ne_map14<-mapview(dist_a, zcol=\"ELECTRCHH14\", col.regions=cols, layer.name=\"2014 Energy Access\", maxpoints=40000000, alpha.regions=100,legend=TRUE, at= scale, map.types=Mtype)\nElecMaps=e_map03+ e_map08 +e_map14\nElecMaps #OUTPUT\n\nc_map03<-mapview(dist_a, zcol=\"COOKFUEL03\", layer.name=\"2003 Wood Use\", maxpoints=40000000, alpha.regions=100,legend=TRUE, at= scale, map.types=Mtype, col.regions=cols)\nc_map08<-mapview(dist_a, zcol=\"COOKFUEL08\", layer.name=\"2008 Wood Use\", maxpoints=40000000, alpha.regions=100,legend=TRUE, at= scale, map.types=Mtype, col.regions=cols)\nc_map14<-mapview(dist_a, zcol=\"COOKFUEL14\", layer.name=\"2014 Wood Use\", maxpoints=40000000, alpha.regions=100,legend=TRUE, at= scale, map.types=Mtype, col.regions=cols)\nCookMaps<-c_map03+c_map08+c_map14\nCookMaps #OUTPUT\n\nd_map03<-mapview(dist_a, zcol=\"deforest03\", layer.name=\"2003 Deforestation\", maxpoints=40000000, alpha.regions=100,legend=TRUE,col.regions=cols, at= scaleD, map.types=Mtype)\nd_map08<-mapview(dist_a, zcol=\"deforest08\", layer.name=\"2008 Deforestation\", maxpoints=40000000, alpha.regions=100,legend=TRUE,col.regions=cols, at= scaleD, map.types=Mtype)\nd_map14<-mapview(dist_a, zcol=\"deforest14\", layer.name=\"2014 Deforestation\", maxpoints=40000000, alpha.regions=100,legend=TRUE,col.regions=cols, at= scaleD, map.types=Mtype)\ndefMaps<-d_map03+d_map08+d_map14\ndefMaps  #OUTPUT\n\n#======================================================\n### ANALYIS ###\n#Bivariate regression\n\nWU_EA03<-lm(COOKFUEL03 ~ ELECTRCHH03, data=dist_a)\nWU_EA08<-lm(COOKFUEL08 ~ ELECTRCHH08, data=dist_a)\nWU_EA14<-lm(COOKFUEL14 ~ ELECTRCHH14, data=dist_a)\n\nsummary(WU_EA03)\ncor(dist_a$COOKFUEL03, dist_a$ELECTRCHH03)\nsummary(WU_EA08)\ncor(dist_a$COOKFUEL08, dist_a$ELECTRCHH08)\nsummary(WU_EA14)\ncor(dist_a$COOKFUEL14, dist_a$ELECTRCHH14)\n\nWU_D03<-lm(deforest03 ~ COOKFUEL03, data=dist_a)\nWU_D08<-lm(deforest08 ~ COOKFUEL08, data=dist_a)\nWU_D14<-lm(deforest14 ~ COOKFUEL14, data=dist_a)\nsummary(WU_D03)\ncor(dist_a$deforest03, dist_a$COOKFUEL03)\nsummary(WU_D08)\ncor(dist_a$deforest08, dist_a$COOKFUEL08)\nsummary(WU_D08)\ncor(dist_a$deforest14, dist_a$COOKFUEL14)\n\nEA_D03<- lm(deforest03 ~ ELECTRCHH03, data=dist_a)\nEA_D08<- lm(deforest08 ~ ELECTRCHH08, data=dist_a)\nEA_D14<- lm(deforest14 ~ ELECTRCHH14, data=dist_a)\nsummary(EA_D03)\ncor(dist_a$deforest03, dist_a$ELECTRCHH03)\nsummary(EA_D08)\ncor(dist_a$deforest08, dist_a$ELECTRCHH08)\nsummary(EA_D14)\ncor(dist_a$deforest14, dist_a$ELECTRCHH14)\n\n\n##Multivariate Regression##\nfit<-lm(deforestALL ~ COOKFUEL14 + ELECTRCHH14 + Pop15 + EDUCLVL14 + Built14 + crop09, data= dist_a)\nsummary(fit)\nconfint(fit, level=0.95) #confidence intervals\nfitted(fit)\nplot(residuals(fit))\nanova(fit)\nlayout(matrix(c(1,2,3,4),2,2))\nplot(fit)\n\n\nlibrary(MASS)\nstep<- stepAIC(fit, direction=\"both\")\nstep$anova\n\n\n##OLS###\n### TIME SERIES LINERA REGRESSION##### tslm(formula=)\n#splm (for spatial regressions)##\n#rvest- harvest scrape webpages#\n####BIVARIATE LOCAL SPATIAL AUTOCORRELATION####\n#bivariate Morans\ninstall.packages(\"dplyr\")\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(sf)\ninstall.packages(\"spdep\")\nlibrary(spdep)\nlibrary(rgdal)\nlibrary(stringr)\ny<- dist_a$ELECTRCHH03\nx<- dist_a$deforest03\nhead(dist_a@data)\n# Programming some functions\n\n# Bivariate Moran's I\nmoran_I <- function(x, y = NULL, W){\n  if(is.null(y)) y = x\n\n  xp <- (x - mean(x, na.rm=T))/sd(x, na.rm=T)\n  yp <- (y - mean(y, na.rm=T))/sd(y, na.rm=T)\n  W[which(is.na(W))] <- 0\n  n <- nrow(W)\n\n  global <- (xp%*%W%*%yp)/(n - 1)\n  local  <- (xp*W%*%yp)\n  list(global = global, local  = as.numeric(local))\n}\n\n\n# Permutations for the Bivariate Moran's I\nsimula_moran <- function(x, y = NULL, W, nsims = 1000){\n\n  if(is.null(y)) y = x\n\n  n   = nrow(W)\n  IDs = 1:n\n\n  xp <- (x - mean(x, na.rm=T))/sd(x, na.rm=T)\n  W[which(is.na(W))] <- 0\n\n  global_sims = NULL\n  local_sims  = matrix(NA, nrow = n, ncol=nsims)\n\n  ID_sample = sample(IDs, size = n*nsims, replace = T)\n  y_s = y[ID_sample]\n  y_s = matrix(y_s, nrow = n, ncol = nsims)\n  y_s <- (y_s - apply(y_s, 1, mean))/apply(y_s, 1, sd)\n\n  global_sims  <- as.numeric( (xp%*%W%*%y_s)/(n - 1) )\n  local_sims  <- (xp*W%*%y_s)\n\n  list(global_sims = global_sims,\n       local_sims  = local_sims)\n}\n\n\n#======================================================\n# Adjacency Matrix (Queen)\n\nnb <- poly2nb(dist_a)\nlw <- nb2listw(nb, style = \"B\", zero.policy = T)\nW  <- as(lw, \"symmetricMatrix\")\nW  <- as.matrix(W/rowSums(W))\nW[which(is.na(W))] <- 0\n\n#======================================================\n# Calculating the index and its simulated distribution\n# for global and local values\n\nm   <- moran_I(x, y, W)\nm[[1]] # global value\n\nm_i <- m[[2]]  # local values\n\nlocal_sims <- simula_moran(x, y, W)$local_sims\n\n# Identifying the significant values\nalpha <- .05  # for a 95% confidence interval\nprobs <- c(alpha/2, 1-alpha/2)\nintervals <- t( apply(local_sims, 1, function(x) quantile(x, probs=probs)))\nsig <- ( m_i < intervals[,1] )  | ( m_i > intervals[,2] )\n\n#======================================================\n# Preparing for plotting\n\ndist_a03<- st_as_sf(dist_a)\ndist_a03$sig <- sig\n\n\n# Identifying the LISA patterns\nxp <- (x-mean(x))/sd(x)\nyp <- (y-mean(y))/sd(y)\n\npatterns <- as.character( interaction(xp > 0, W%*%yp > 0) )\npatterns <- patterns %>%\n  str_replace_all(\"TRUE\",\"High\") %>%\n  str_replace_all(\"FALSE\",\"Low\")\npatterns[dist_a03$sig==0] <- \"Not significant\"\ndist_a03$patterns <- patterns\n\n# Plotting\nmapview(dist_a03, zcol=\"patterns\", legend=TRUE, alpha=0, maxpoints=40000000, alpha.regions=80, layer.name=\"BiLISA: Deforestation and EA\")\n\n#This is the link to download the Hansen data\n#Go to tasks and then download to google drive\n#https://code.earthengine.google.com/d5c909c06ec28626324ecd65c34417f2\n\n#This is the link to download the Cropland data\n#Go to tasks and then download to google drive\n#https://code.earthengine.google.com/594731702af6ef064128e784a632a0e8\n",
    "created" : 1522849933471.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "105534367",
    "id" : "BE990200",
    "lastKnownWriteTime" : 1522884113,
    "last_content_update" : 1522884113500,
    "path" : "~/R/EnergyAccess/R/workspace.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}