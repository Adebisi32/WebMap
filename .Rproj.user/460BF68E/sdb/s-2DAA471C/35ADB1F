{
    "collab_server" : "",
    "contents" : "#Working with csv files in R Studio\n\n\nsetwd(\"C:/Users/NMcCray/Documents/R\")\nfarmers<-read.csv(\"farmer_test.csv\")\nprint(farmers)\n\n#inspect data\nhead(farmers)\nfarmers[1:5, ] #same as head\nstr(farmers) #tells information about data type, indicates that we have factors YUCK\n\nfarmers<-read.csv(file=\"farmer_test.csv\",\n                  stringsAsFactors = FALSE) #redo so farmers data is not factors, fun fact, ctrl+i will set indent correctly\n\nhead(farmers)\n\n#use apply function to sum the pl, ra, mm data columns\n# METHOD 1\nx<- farmers[ ,3:5]\ncol_sum<-apply(x, 2, sum)\ncol_avg<- apply(x, 2, mean)\n# METHOD 2\nnew<-apply(farmers[ , 3:5], 2, sum)\n#METHOD 3\nnew2<-apply(farmers[, c(\"ra\",\"mm\",\"pl\")], 2, sum)\n\n\nx<-farmers$date # shows all dates\nxU<- unique(farmers$date) # shows unique date data\n\nfarmers[farmers$date== date[1], ] # gets obervations of all occurances of the first row vale in date column\nnrow(farmers[farmers$date==\"10/31/2016\", ])\n\nfarmers[grep(\"99f9\", farmers$uuid), ] # finds all items that match 99f9 in uuid column\n\no<- lapply(dates, function(x) { #calculations\n  dat <- farmers[...] #subset\n  a<-apply(dat, 2, sum) #output\n  a #return\n})\n})\n\n#FUN DATA TYPES\n\n# a vector with names for each element\na <- 1:10\nnames(a) <- letters[1:length(a)]\n\n# a matrix\nmat <- cbind(a = 1:10, b = 1:10, c = 1:10)\ncolnames(mat) <- c(\"a\", \"b\", \"c\")\n\n# a data.frame\nd <- c(rep(\"pigs\", 3), rep(\"ponies\", 4), rep(\"puppies\", 3))\ndat <- cbind.data.frame(mat, d)\n\n# a list\nl <- list(a, mat, dat)\nnames(l) <- c(\"a\", \"mat\", \"dat\")  # give the list names\n\n\n#Write for loop that splits on unique values of “grp”, and prints mean of “v2”\n#Do the same split-apply-combine with lapply\nset.seed(1)\ndat <- data.frame(\"V1\" = 1:100,\n                  \"V2\" = sample(1:100, size = 100, replace = TRUE),\n                  \"grp\" = letters[sample(1:5, size = 100, replace = TRUE)])\ngrp<- unique(dat$grp)\nfor(i in 1:length(grp)) { #using for loop\n  a<-dat[dat$grp== grp[i], \"V2\"]\n  print(mean(a))\n}\na<- lapply(grp, function(x) { #using lapply\n  b<- dat[dat$grp==grp[x], \"V2\"]\n  mean(b)\n})\nprint(a)\nhead(dat)\ndo.call(rbind, a) #turns results of lapply into matrix\ndata.frame(\"val\"=do.call(rbind, a)) #turns results of lapply into dataframe with col name\ndat[dat$grp==\"a\", \"V2\"]\ndat[dat$grp==\"c\", \"V2\"]\n\n\nfnm <- system.file(\"extdata/farmer_test2.csv\", package = \"geospaar\")\nfarmers <- read.csv(fnm, stringsAsFactors = FALSE)\ndates <- unique(farmers$date)  # forgot to make this explicit before class\n\n# the fast way\nfarmers2 <- t(sapply(dates, function(x) {\n  dat <- farmers[farmers$date == x, c(\"pl\", \"ra\", \"mm\")]\n  colSums(dat)\n}))\n\n# bind dates, and change row names of farmers2 from dates to integers\n# farmers2 <- cbind.data.frame(\"date\" = as.Date(dates), farmers2)\nfarmers2 <- data.frame(\"date\" = as.Date(dates), farmers2)\nrownames(farmers2) <- 1:nrow(farmers2)  # rownames were dates, want just as #\nplot(farmers2$mm)\ninms <- c(\"pl\", \"ra\", \"mm\")\ncols <- c(\"orange\", \"red\", \"blue\")\nynms <- c(\"Plant\", \"Rain\", \"Tot rain\")\npar(mfrow = c(1, 3))\nfor(i in 1:length(inms)) {  # i = 2\n  x <- farmers2$date\n  y <- farmers2[, inms[i]]\n  plot(x, y, pch = 16, col = cols[i], xlab = \"Date\",\n       ylab = ynms[i], cex=7)\n}\n?hist\nhist(farmers2$pl, col = \"orange\")\ninms <- c(\"pl\", \"ra\", \"mm\")\ncols <- c(\"orange\", \"red\", \"blue\")\nxnms<-c(\"N\",\"N\",\"mm\")\ntitle<-c(\"N farmers who planted\", \"N farmers reporting rain\", \"Total Rainfall\")\npar(mfrow=c(1,3))\nfor(i in 1:length(inms)){\n  x<-farmers2[, inms[i]]\n  hist(x, col=cols[i], cex=9,xlab=xnms[i],main=paste(title[i]))\n}\npl_lm <- lm(pl ~ mm, data = farmers2)\ndummy <- seq(0, 7100, 100)  # first, dummy x value data\nmethod1_predict <- predict(pl_lm, newdata = data.frame(“mm” = dummy))\nlines(dummy, method1_predict, lwd = 5, col = “red”)\npl_lm <- lm(pl ~ mm, data = farmers2)\nplot(pl ~ mm, data = farmers2)\nabline(pl_lm)\npl_LL<-loess(pl ~ mm, data = farmers2)\nputput<-loess(pl_lm)\npl_lo<-predict(putput)\nplot(pl_lo)\nplot(farmers2$mm, farmers2$pl)  # base plot\nabline(pl_lm, lwd = 10)\n\n\n#Another Example\n\nfarmers <- read.csv(\"C:/Users/NMcCray/Documents/R/Geospaar/inst/extdata/farmer_test2.csv\", stringsAsFactors = FALSE)\nhead(farmers)\n\nstr(farmers[,\"date\"]) #character\nfarmers$date <- as.Date(farmers$date)\nstr(farmers[, \"date\"]) #double\n\nfarm_mu<-(apply(farmers[ , 3:5], 2, mean))\nfarm_rng<-(apply(farmers[ , 3:5], 2, range))\nprint(farm_rng)\n\nfarm_stat<-(rbind(farm_mu, farm_rng))\nprint(farm_stat)\nstats<-c(\"mean\",\"min\",\"max\")\nfarm_stat<-cbind.data.frame(stats,farm_stat)\nprint(farm_stat)\n\nfarm_stat2<-sapply(farmers[,3:5], function(x) {\n  a<-mean(x)\n  b<-range(x)\n  return(c(a,b))\n})\nstats<-c(\"mean\",\"min\",\"max\")\nfarm_stat2<-cbind.data.frame(stats,farm_stat2)\nprint(farm_stat2)\n\ndates<-unique(farmers$date)\nrain_mean<-lapply(dates, function(x) {\n  a<-mean(farmers[farmers$date==x, \"mm\"])\n  b<-sum(farmers[farmers$date==x, \"mm\"])\n  return(c(a,b))\n})\nrain_mean<-do.call(rbind,rain_mean)\n\nrain_mean<-cbind.data.frame(\"dates\"=as.Date(dates),rain_mean)\ncolnames(rain_mean)[colnames(rain_mean)==\"1\"]<-\"rfmu\"\ncolnames(rain_mean)[colnames(rain_mean)==\"2\"]<-\"rftot\"\nprint(rain_mean)\nstr(rain_mean)\n\nrain_mean<-t(sapply(dates, function(x) {\n  a<-mean(farmers[farmers$date==x, \"mm\"])\n  b<-sum(farmers[farmers$date==x, \"mm\"])\n  return(c(a,b))\n}))\nrain_mean <- cbind.data.frame(\"date\" = as.Date(dates), rain_mean)\nrownames(rain_mean) <- 1:nrow(rain_mean)\ncolnames(rain_mean)[colnames(rain_mean)==\"1\"]<-\"rfmu\"\ncolnames(rain_mean)[colnames(rain_mean)==\"2\"]<-\"rftot\"\nprint(rain_mean)\nstr(rain_mean)\n\nnfarm <- lapply(dates, function(x){\n  unique(farmers[farmers$date == x, \"uuid\"])\n})\nnfarm <- lengths(nfarm)\nprint(nfarm)\n\nrain_mean<-t(sapply(dates, function(x) {\n  a<-mean(farmers[farmers$date==x, \"mm\"])\n  b<-sum(farmers[farmers$date==x, \"mm\"])\n  c<-unique(farmers[farmers$date==x,\"uuid\"])\n  d<-length(c)\n  return(c(a,b,d))\n}))\nrain_mean <- cbind.data.frame(\"date\" = as.Date(dates), rain_mean)\nrownames(rain_mean) <- 1:nrow(rain_mean)\ncolnames(rain_mean)[colnames(rain_mean)==\"1\"]<-\"rfmu\"\ncolnames(rain_mean)[colnames(rain_mean)==\"2\"]<-\"rftot\"\ncolnames(rain_mean)[colnames(rain_mean)==\"3\"]<-\"nfarm\"\nprint(rain_mean)\n\nfarmers_ss <- farmers[grep(\"fa4c6|ba5973|e340de\", farmers$uuid), c(\"date\",\"mm\")]\nfrfmu<- sapply(dates, function(x){\n  mean(farmers_ss[farmers_ss$date==x,\"mm\"])\n})\nrain_mean<-cbind.data.frame(rain_mean,frfmu)\nrain_mean\n\nplot(x=rain_mean$date, y=rain_mean$rfmu, xlab=\"Date\", ylab=\"Rainfall(mm)\", col=\"red\", pch=20)\nlines(x=rain_mean$date, y=rain_mean$rfmu, col=\"red\")\n\n\npar(mfrow= c(2,2), mar= c(4,4,1,1))\ninms<-c(\"rfmu\",\"rftot\",\"nfarm\", \"frfmu\")\ncolors<-c(\"red\",\"orange\",\"purple\",\"blue\")\nYaxis<-c(\"rfmu\",\"rftot\",\"nfarm\", \"frfmu\")\nfor (i in 1:length(inms)) {\n  x<-rain_mean$date\n  y<-rain_mean[, inms[i]]\n  plot(x, y, pch=20, col=colors[i], xlab=\"Date\", ylab=Yaxis[i])\n}\n\nrflm<-lm(formula= rfmu ~ dates, data=rain_mean)\nplot(x=rain_mean$date, y=rain_mean$rfmu, xlab=\"Date\", ylab=\"Rainfall(mm)\", col=\"red\", pch=20)\nabline(rflm, col=\"red\")\nrain_meanI<-cbind.data.frame(\"Index\"=1:nrow(rain_mean),rain_mean)\nhead(rain_meanI)\nrflo<-loess(rfmu ~ Index, data=rain_meanI)\nloline<-predict(rflo)\nplot(x=rain_mean$date, y=rain_mean$rfmu)\nlines(rain_mean$date, loline, col=\"blue\")\n",
    "created" : 1522849920466.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "242709285",
    "id" : "35ADB1F",
    "lastKnownWriteTime" : 1508079628,
    "last_content_update" : 1508079628,
    "path" : "~/R/ApplyFunctions.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}